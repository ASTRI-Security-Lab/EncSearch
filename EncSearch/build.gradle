apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'eclipse'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.maiflai:gradle-scalatest:0.11"
  }
}

apply plugin: "com.github.maiflai.scalatest"

repositories {
    mavenCentral()
}

dependencies {
	compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '1.8.+'
	compile group: 'org.apache.poi', name: 'poi-scratchpad', version: '3.13'
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.13'

	compile group: 'org.apache.lucene', name: 'lucene-core', version: '5.3.+'
	compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '5.3.+'

	compile group: 'javax.json', name: 'javax.json-api', version: '1.+'
	compile group: 'org.glassfish', name: 'javax.json', version: '1.0.+'

	compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.22'
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.22'
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-processing', version: '2.22'

	compile 'org.eclipse.persistence:org.eclipse.persistence.moxy:2.6.0+'
	
	compile group: 'com.google.guava', name: 'guava', version: '19.0-rc2'
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.54'
	
    testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '2.2.+'
	testCompile 'org.scalatest:scalatest_2.11:2+'
	testRuntime 'org.pegdown:pegdown:1.1.0'

    // for cleaning the DB for tests
	testCompile group: 'org.postgresql', name:'postgresql', version: '9.4-1204-jdbc4'
}

eclipse.project {
	natures 'org.eclipse.buildship.core.gradleprojectnature'
}

def source_path = 'org/astri/snds/encsearch'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes('Implementation-Title': 'Searchable Encryption Client',  
        	'Implementation-Version': '0.2',
        	'Main-Class': 'org.astri.snds.encsearch.Main')
    }
    baseName = project.name + '-all'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } } {
		exclude "META-INF/*.SF"
		exclude "META-INF/*.DSA"
		exclude "META-INF/*.RSA"
	}

	/*
	// TODO: add this to thin jar as well
	from('src/main/java/' + source_path) {
		include 'jaxb.properties' into (source_path)
	}
	*/

    with jar
}

/*
task depSize() {
	configurations.compile.files.each { file ->
		print file.size() / 1000
		print " kB \t"
		println file
	}
}
*/
